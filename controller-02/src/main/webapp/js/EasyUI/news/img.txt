在spring-mvx.xml中粘入配置文件
     <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	      <property name="maxUploadSize" value="102400000"></property>
	 </bean>

引用文件——————————————————————————————————————————————————————————————————————————————————

<link rel="stylesheet" href="<%=request.getContextPath()%>/js/uploadify/uploadify.css">
<script src="<%=request.getContextPath()%>/js/uploadify/jquery.uploadify.min.js"></script>


html代码——————————————————————————————————————————————————————————————————————————————————

<body>
<form>
	头像<input type="hidden" name="userheadimg"/>
	    //上传按钮
	     <input type="file" id="imgFileBTN"   >
            //图片回显的位置
	     <div id="showImgDiv"></div>
	    //进度条位置
	     <div id="showBarDiv" ></div> 

	
</form>
<script type="text/javascript">
 $(function(){
	     //文件域的id
	     $("#imgFileBTN").uploadify({
	     //前台请求后台的url 不可忽略的参数
	     'uploader' :"<%=request.getContextPath()%>/crud/uploadPhotoFile.do",
	     //插件自带 不可忽略的参数
	     'swf' : '<%=request.getContextPath()%>/js/uploadify/uploadify.swf',
	    //撤销按钮的图片路径
	     'cancelImg' : '<%=request.getContextPath() %>/js/uploadify/uploadify-cancel.png',
	    //如果为true 为自动上传 在文件后 为false 那么它就要我们自己手动点上传按钮
	     'auto' : true,
	    //可以同时选择多个文件 默认为true 不可忽略
	     'multi' : false,
	    //给上传按钮设置文字
	     'buttonText' : '上传图片',
	    //上传后队列是否消失
	     'removeCompleted' : true,
	     'removeTimeout' : 1,
	    //上传文件的个数
	     'uploadLimit' : 2,
	     'fileTypeExts' : '*.jpg;*.jpge;*.gif;*.png',
	     'fileSizeLimit' : '2MB',
	    //给div的进度条加背景 不可忽略
	     'queueID' : 'showBarDiv',
	    // action中接收文件的全局变量名
	     'fileObjName' : 'artImg',
	     'onUploadSuccess' : function(file, data, response) {
		//  将图片回显    data   接收到的是图片名称
	         $("[name='userheadimg']").val(data);
	        var str = '<img style="width:100px;height:100px;border-style:solid;border-width:1px; border-color:black;"src="<%=request.getContextPath()%>'+data+'">';
	        $("#showImgDiv").html(str);
			}
	     });
	}); 
</script>

</body>

----修改回显 
	$("#img").prop("src","<%=request.getContextPath()%>"+data.staffphoto);
----datagrid图片显示
	 {field:'photo',title:'照片',width:100,
			        	formatter: function(value,row,index){
							return '<img width="100" src="<%=request.getContextPath()%>/'+value+'"/>';
							}
			        },   
Java代码————————————————————————————————————————————————————————————————————————————————————————————————————

@RequestMapping("uploadPhotoFile")
	@ResponseBody
	    public String upImg(MultipartFile artImg,HttpServletRequest req) throws Exception{
	        //获取原文件名称
	        String fileName = artImg.getOriginalFilename();
	        SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmss");
	        String folderPath = req.getSession().getServletContext().getRealPath("/")+
	                "upload/";
	        File file = new File(folderPath);
	        //	        该目录是否已经存在
	        if(!file.exists()){
	         //   创建文件夹
	            file.mkdir();
	        }
	        String onlyFileName = sdf.format(new Date())+fileName.substring(fileName.lastIndexOf('.'));
	        FileOutputStream fos = new FileOutputStream(folderPath+onlyFileName);
	        fos.write(artImg.getBytes());
	        fos.flush();
	        fos.close();
	        return  "/upload/"+onlyFileName;
	    }
